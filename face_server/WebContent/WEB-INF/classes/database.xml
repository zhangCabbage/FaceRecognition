<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
                        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">
	<!-- ========================= Start of PERSISTENCE DEFINITIONS ========================= -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:init.properties"/>
	</bean>
	<bean id="nativeJdbcExtractor" class="org.springframework.jdbc.support.nativejdbc.CommonsDbcpNativeJdbcExtractor" lazy-init="true"/>
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">  
	     
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<property name="url" value="jdbc:mysql://127.0.0.1:3306/face_recognition?userUnicode=true&amp;characterEncoding=UTF-8"/>
		<property name="username" value="hive"/>
		<property name="password" value="hive"/>
		
	</bean>
	
	<!-- 处理大型数据 -->
	<bean id="lobHandler" class="org.springframework.jdbc.support.lob.OracleLobHandler" lazy-init="true">
		<property name="nativeJdbcExtractor">
			<ref bean="nativeJdbcExtractor"/>
		</property>
	</bean>	
	<util:list id="packagesToScan">
		<value>com.framework.domain</value>
	</util:list>
	<util:properties id="hibernateProperties">
		<prop key="hibernate.dialect">${hibernate.dialect}</prop>
		<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
		<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
		<prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop>
		<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
		<prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
		<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
		<prop key="hibernate.cache.provider_class">${hibernate.cache.provider_class}</prop>
		<prop key="hibernate.connection.release_mode">${hibernate.connection.release_mode}</prop>
		<prop key="hibernate.jdbc.use_scrollable_resultset">${hibernate.jdbc.use_scrollable_resultset}</prop>
		<prop key="hibernate.temp.use_jdbc_metadata_defaults">${hibernate.temp.use_jdbc_metadata_defaults}</prop>
	</util:properties>
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean" destroy-method="destroy">
		<property name="dataSource" ref="dataSource"/> 
	 		
		<property name="packagesToScan" ref="packagesToScan"/>
		<property name="hibernateProperties" ref="hibernateProperties"/>
		<property name="mappingDirectoryLocations">
			<list>
				<value>classpath:com/framework/domain</value>
			</list>
		</property>
	</bean>
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	<bean id="txInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="transactionManager"/>
		<property name="transactionAttributes">
			<props>
				<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="execute*">PROPAGATION_REQUIRED</prop>
				<prop key="invoke*">PROPAGATION_NEVER</prop>
			</props>
		</property>
	</bean>
	<bean id="autoProxyCreator" class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="interceptorNames" value="txInterceptor"/>
		<property name="beanNames">
			<list>
				<value>*Service</value>
			</list>
		</property>
	</bean>
	<!-- 通用DAO -->
	<bean id="genericHBDao" class="com.framework.dao.impl.GenericHBDao">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	<bean id="genericJDBCDao" class="com.framework.dao.impl.GenericJDBCDao">
		<property name="dataSource" ref="dataSource"/>
	</bean>
</beans>